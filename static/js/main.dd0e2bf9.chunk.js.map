{"version":3,"sources":["Components/Title.js","Components/ButtonChip.js","Components/Chips.js","Components/TerminDefinition.js","Components/ChipsContainer.js","Components/ContainerReact.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Box","sx","height","display","flexDirection","justifyContent","width","fontWeight","fontSize","fontFamily","borderColor","borderWidth","borderStyle","boxSizing","margin","lineHeight","cursor","alignItems","position","SvgIcon","top","viewBox","fill","xmlns","fillRule","clipRule","d","marginLeft","textAlign","verticalAlign","ButtonChips","props","padding","Button","style","borderRadius","backgroundColor","color","textTransform","pokemon","name","Chips","onClick","e","pokemonHandler","flexWrap","alignContent","map","val","index","ButtonChip","theme","createTheme","typography","h1","p","unselectedPokemon","sprites","other","front_default","stats","base_stat","moves","TerminDefinition","useState","selectedPokemon","setSelectedPokemon","useEffect","url","require","get","then","response","data","catch","err","console","log","ThemeProvider","Typography","variant","marginTop","objectFit","src","alt","length","id","ChipsContainer","pokemons","setPokemons","selectedUrl","setSelectedUrl","results","key","target","textContent","ContainerReact","App","Container","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd0e2bf9.chunk.js","sourcesContent":["import React from 'react';\nimport {Box, SvgIcon} from \"@mui/material\";\n\n\nfunction Title() {\n\n    return (\n        <header>\n            <Box\n                sx={{\n                    height: \"30.66px\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: 'space-between',\n                }}>\n                <Box\n                    sx={{\n                        width: 107,\n                        height: 28,\n                        fontWeight: 500,\n                        fontSize: 12,\n                        fontFamily: 'Raleway, Arial',\n                        borderColor: \"#FFF\",\n                        borderWidth: \"1px\",\n                        borderStyle: \"solid\",\n                        boxSizing: \"border-box\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: \"93px\",\n                            height: \"14px\",\n                            margin: \"7px\",\n                            lineHeight: \"14px\",\n                            cursor: \"default\"\n                        }}>\n                        ПОКЕМОНЫ&nbsp;API\n                    </Box>\n                </Box>\n                <Box\n                    sx={{\n                        height: \"30.66px\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        position: \"relative\"\n                    }}>\n                    <Box sx={{\n                        position: \"relative\"\n                    }}>\n                        <SvgIcon\n                            sx={{\n                                width: \"24.25px\",\n                                height: \"30.66px\",\n                                position: \"relative\",\n                                top: \"2px\"\n                            }}\n                            viewBox=\"0 0 25 31\" fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                                  d=\"M14.9084 12.2187C14.7547 11.354 13.9564 10.7727 13.1124 10.9227C12.2742 11.0717 11.7209 11.9026 11.8729 12.7582L12.7146 17.4937L11.7028 17.6735L9.93113 7.70562C9.77561 6.83059 8.97586 6.24098 8.1318 6.39099C7.29357 6.53997 6.73845 7.36063 6.89566 8.24513L8.81631 19.0515C6.32285 17.1107 3.12935 15.0578 2.21404 16.4302C1.31805 17.7736 4.71484 20.433 9.90176 26.6424C12.2388 29.4401 14.8782 31.1926 18.6825 30.517C22.8736 29.7721 25.6444 25.6418 24.8712 21.2917L23.3792 12.8967C23.2239 12.023 22.4243 11.4344 21.5803 11.5844C20.7421 11.7334 20.1888 12.5646 20.3437 13.4362L20.8092 16.055L19.7973 16.2348L19.1424 12.5499C18.9887 11.685 18.1904 11.1035 17.3463 11.2536C16.5081 11.4025 15.9523 12.2191 16.1069 13.0895L16.5752 15.7241L15.5634 15.904L14.9084 12.2187Z\"\n                                  fill=\"white\"/>\n                            <path\n                                d=\"M16.7504 8.44786L16.7046 9.51161L12.5931 9.26753L12.6389 8.20379L16.7484 8.44774L16.7504 8.44786Z\"\n                                fill=\"#1986EC\"/>\n                            <path d=\"M7.51714 0L8.26377 4.20083L7.25195 4.38067L6.50532 0.179834L7.51714 0Z\"\n                                  fill=\"#1986EC\"/>\n                            <path\n                                d=\"M11.5709 5.64038L10.789 4.93738L13.4646 1.73474L14.2463 2.43775L11.5709 5.64038Z\"\n                                fill=\"#1986EC\"/>\n                            <path\n                                d=\"M4.93363 10.6289L4.52414 9.64605L0.748535 11.2919L1.15802 12.2748L4.93363 10.6289Z\"\n                                fill=\"#1986EC\"/>\n                            <path\n                                d=\"M4.64343 6.87161L5.13513 5.94227L1.51993 3.85764L1.02823 4.78698L4.64343 6.87161Z\"\n                                fill=\"#1986EC\"/>\n                        </SvgIcon>\n                    </Box>\n\n                    <Box\n                        sx={{\n                            marginLeft: \"10px\",\n                            fontFamily: \"Raleway, Arial\",\n                            fontSize: \"12px\",\n                            lineHeight: \"12px\",\n                            textAlign: \"left\",\n                            verticalAlign: \"top\",\n                            cursor: \"default\"\n                        }}>\n                        Нажмите&nbsp;на<br/>\n                        нужного&nbsp;Покемона\n                    </Box>\n                </Box>\n            </Box>\n        </header>\n    )\n}\n\nexport default Title;\n","import React from 'react';\nimport {Box, Button} from \"@mui/material\";\n\n\n\nfunction ButtonChips(props) {\n\n    return (\n        <Box\n            sx={{\n                height: \"60px\",\n                margin: \"5px 3px\",\n                padding: 0,\n            }}\n        >\n                <Button\n                    style={{\n                        fontWeight: 500,\n                        lineHeight: \"20px\",\n                        fontSize: \"20px\",\n                        fontFamily: 'Raleway',\n                        borderRadius: \"44px\",\n                        borderColor: \"#1986EC\",\n                        borderStyle: \"solid\",\n                        backgroundColor: \"#1986EC\",\n                        color: \"#FFF\",\n                        textTransform: \"lowercase\",\n                        padding: \"20px\",\n                        boxSizing: \"border-box\",\n                        verticalAlign: \"top\",\n                        cursor: \"pointer\"\n\n                    }}>\n                    {props.pokemon.name}</Button>\n        </Box>\n    )\n}\n\nexport default ButtonChips;\n","import React from 'react';\nimport {Box} from \"@mui/material\";\nimport ButtonChips from \"./ButtonChip\";\n\n\nfunction Chips(props) {\n\n    // Вешаем обработчик событий на div (Box в mui), после отслеживаем свойство .textContent по event.target\n    return <Box\n        onClick={(e) => { props.pokemonHandler(e); }}\n        sx={{\n            width: \"484px\",\n            margin: \"auto 12px auto 0\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            alignContent: \"center,\"\n        }}>\n            {/* Парсим кнопки методом map, задаём key по индексу, т.к. удалять определенные кнопки не планируем */}\n            {props.pokemon.map((val, index) => (\n                <ButtonChips key={index} pokemon={val}/>\n            ))}\n    </Box>\n}\n\nexport default Chips;\n","import React, {useEffect, useState} from 'react';\nimport {Box, createTheme, ThemeProvider, Typography} from \"@mui/material\";\n\n\n// Костомная тема для заголовка и параграфов\nconst theme = createTheme({\n    typography: {\n        h1: {\n            width: \"396px\",\n            fontSize: 48,\n            color: \"#A0A0A0\",\n            fontFamily: \"Raleway\",\n            textTransform: \"capitalize\",\n            fontWeight: 700,\n            boxSizing: \"border-box\"\n        },\n        p: {\n            width: \"396px\",\n            display: \"block\",\n            fontFamily: \"Raleway\",\n            fontSize: 17,\n            lineHeight: \"26px\",\n            textAlign: \"left\",\n            color: \"#A0A0A0\"\n        }\n    },\n});\n\nconst unselectedPokemon = {\n    // Изначальные значения для стейта, данные приближены к тем, что будем парсить\n    name: \"Выберите покемона\",\n    sprites: {\n        other: {\n            \"official-artwork\":\n                {\n                    front_default: \"https://avatars.githubusercontent.com/u/19692032?v=4\"\n                },\n        },\n    },\n    stats: [\n        null,\n        {\n            base_stat: null\n        },\n    ],\n    moves: []}\n\n\nfunction TerminDefinition(props) {\n\n    // Стейт для выбранного покемона, которого будем отрисовывать\n    const [selectedPokemon, setSelectedPokemon] = useState(unselectedPokemon)\n\n\n    // Асинхронная функция для запроса данных c сервера poke.io\n    const getPokemon = (url) => {\n\n        // Если url не задан, функция прерывется return'ом\n        if (url == null) {\n            return\n        }\n        const axios = require('axios');\n        axios.get(url)\n            .then((response) => {\n                setSelectedPokemon(response.data)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    // Хук для запроса на сервер, если через пропсы компонента получила ссылку на покемона\n    useEffect(() => {\n        getPokemon(props.url)\n    }, [props.url])\n\n    // Кастомный inline стиль для изображения\n    const imgStyle = {\n        width: \"170px\",\n        height: \"170px\",\n        margin: \"0 auto\",\n        objectFit: \"cover\"\n    }\n\n    return <Box\n        sx={{\n            padding: \"44px 44px 16px\",\n            width: \"calc(484px - 44px - 44px)\",\n            height: \"calc(500px - 44px - 16px)\",\n            backgroundColor: \"#000\",\n        }}\n    >\n        <ThemeProvider theme={theme}>\n            {/* Парсинг имени покемона */}\n            <Typography variant=\"h1\">{selectedPokemon.name}</Typography>\n            <Box\n                sx={{\n                    margin: \"44px 0 39px\",\n                    marginTop: \"44px\",\n                    width: \"396px\",\n                    height: \"200px\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignContent: \"space-between\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                }}>\n                {/* Парсинг изображения покемона */}\n                <img\n                    style={imgStyle}\n                    src={selectedPokemon.sprites.other[\"official-artwork\"].front_default}\n                    alt={selectedPokemon.name}/>\n            </Box>\n\n            {/* Если компонента получила ссылку на покемона и сервер вернул данные,\n            то отрисовываем информацию о покемоне */}\n            <Typography variant=\"p\">\n                {selectedPokemon.moves.length > 0 && \"Снялса в \"}\n                {selectedPokemon.moves.length > 0 && selectedPokemon.moves.length}\n                {selectedPokemon.moves.length === 1 && \" серии\"}\n                {selectedPokemon.moves.length > 1 && \" сериях\"}\n            </Typography>\n            <Typography variant=\"p\">\n                {selectedPokemon.id && \"id:\"} {selectedPokemon.id}\n            </Typography>\n            <Typography variant=\"p\">\n                {selectedPokemon.id && \"height:\"} {selectedPokemon.height}\n            </Typography>\n            <Typography variant=\"p\">\n                {selectedPokemon.stats[1].base_stat && \"attack:\"} {selectedPokemon.stats[1].base_stat}\n            </Typography>\n        </ThemeProvider>\n    </Box>\n}\n\nexport default TerminDefinition;\n","import React, {useEffect, useState} from 'react';\nimport {Box} from \"@mui/material\";\nimport Chips from \"./Chips\";\nimport TerminDefinition from \"./TerminDefinition\";\n\n\nfunction ChipsContainer() {\n\n    // Стейт для массива покемонов, которые пойдут в кнопки\n    const [pokemons, setPokemons] = useState([\n        {name: \"loading...\", url: \"https://pokeapi.co/404\"}\n    ])\n\n    // Стейт для ссылки на покемона, которого выбрали\n    const [selectedUrl, setSelectedUrl] = useState(null)\n\n\n    // Асинхронная функция, которая делает запрос через axios на сервер pokeapi,\n    // чтобы получить список 10'и покемонов\n    const get10Pokemon = () => {\n        const axios = require('axios');\n        axios.get(\"https://pokeapi.co/api/v2/pokemon/?limit=10\")\n            .then((response) => {\n                setPokemons(response.data.results)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    // Обработчик события, чтобы отследить, какого покемона выбрали\n    const pokemonHandler = (e) => {\n        // Проверяем, у какого покемона совпадает поле \"name\" со значением кнопки\n        for (let key in pokemons) {\n            if (pokemons[key].name === e.target.textContent) {\n                // Передаём в стейт ссылку на выбранного покемона\n                let url = pokemons[key].url\n                setSelectedUrl(url)\n\n            }\n        }\n\n    }\n\n    // Хук для запуска асинхронного get10Pokemon, когда компонент примонтируется\n    useEffect(() => {\n        get10Pokemon()\n        // Пустая зависимость, чтобы get10Pokemon вызвался всего 1 раз\n    }, [])\n\n\n    return <main>\n        <Box\n            sx={{\n                margin: \"54px auto\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                alignContent: \"center\",\n                justifyContent: \"center\",\n            }}\n        >\n            {/* В props'ах передаём список покемонов для кнопок и обработчик событий */}\n            <Chips pokemon={pokemons} pokemonHandler={pokemonHandler}/>\n\n            {/* В props'ах передаём ссылку на выбранного покемона */}\n            <TerminDefinition url={selectedUrl}/>\n        </Box>\n    </main>\n}\n\nexport default ChipsContainer;\n","import React from 'react';\nimport Title from \"./Title\";\nimport {Box} from \"@mui/material\";\nimport ChipsContainer from \"./ChipsContainer\";\n\n\nfunction ContainerReact() {\n\n    return (\n        <Box\n            sx={{\n                margin: \"100px auto 0\",\n            }}\n        >\n            <Title/>\n            <ChipsContainer/>\n        </Box>\n)\n}\n\nexport default ContainerReact;\n","import React from 'react';\r\nimport ContainerReact from \"./Components/ContainerReact\";\r\nimport {Container} from \"@mui/material\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Container sx={{\r\n            maxWidth: \"100vw\",\r\n            padding: 0,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n        }}>\r\n            <ContainerReact/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/raleway/500.css';\nimport '@fontsource/raleway/600.css';\nimport '@fontsource/raleway/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}